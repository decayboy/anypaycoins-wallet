version: '3'

services:
  api:
    image: alpine:3.7
    container_name: apc-wallet-api
    working_dir: /wallet
    command: /bin/sh -c "crond && /wallet/api"
    restart: always
    environment:
      - GOPATH=$HOME
      - WALLET_API_CONF=${WALLET_API_CONF:-/wallet/conf/api.conf}
    ports:
      - 8099:8080
    volumes:
      - ./bin/alpine:/wallet
      - ./migrations:/wallet/migrations
      - ./conf:/wallet/conf
      - ./data/log:/var/log
      - ./etc/crontab.conf:/var/spool/cron/crontabs/root
    links:
      - db:apc-wallet-db
      - goose:apc-wallet-goose
      - geth-api:apc-geth-api
      - bitcoin:apc-bitcoin
      - bitcoin-cash:apc-bitcoin-cash
      - ethereum:apc-ethereum
    depends_on:
      - db
      - goose
      - geth-api
      - bitcoin
      - bitcoin-cash
      - ethereum

  geth-api:
    image: alpine:3.7
    container_name: apc-wallet-geth-api
    working_dir: /wallet
    command: /bin/sh -c "/wallet/geth-api"
    restart: always
    environment:
      - GOPATH=$HOME
      - GETH_API_CONF=${GETH_API_CONF:-/wallet/conf/geth-api.conf}
    volumes:
      - ./bin/alpine:/wallet
      - ./migrations:/wallet/migrations
      - ./conf:/wallet/conf
      - ./data/ethereum/.ethereum/keystore:/keystore
      - ./data/ethereum/.ethereum/testnet/keystore:/keystore-testnet
    links:
      - ethereum:apc-ethereum
    depends_on:
      - ethereum

  goose:
    container_name: apc-wallet-goose
    image: alpine:3.7
    working_dir: /wallet
    command: /bin/sh -c "/wallet/goose -dir \"/wallet/migrations\" \"${DB_DRIVER:-postgres}\" \"${DB_OPEN:-host=db user=postgres password=12345 dbname=wallet sslmode=disable}\" up"
    restart: on-failure
    volumes:
      - ./bin/alpine:/wallet
      - ./migrations:/wallet/migrations
      - ./conf:/wallet/conf
    links:
      - db:apc-wallet-db
    depends_on:
      - db

  db:
    container_name: apc-wallet-db
    image: postgres:9.6
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-12345}
      - POSTGRES_DB=${POSTGRES_DB:-wallet}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data/pgdata}
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data/pgdata

  ethereum:
    container_name: apc-ethereum
    image: ethereum/client-go:alpine
    restart: always
    command:
      ${ETHEREUM_TESTNET:-}
      --rpc
      --rpcaddr '${ETHEREUM_RPC_ADDR:-0.0.0.0}'
      --rpcport ${ETHEREUM_RPC_PORT:-8545}
      --rpcapi eth,personal
      --rpcvhosts '*'
      --maxpeers=0
    volumes:
      - ./data/ethereum/.ethereum:/root/.ethereum

  bitcoin:
    container_name: apc-bitcoin
    image: ruimarinho/bitcoin-core:0.16.0-alpine
    restart: always
    command:
      -connect=0
      -testnet=${BITCOIN_TESTNET:-0}
      -rest
      -rpcallowip=${BITCOIN_RPC_ALLOWIP:-0.0.0.0/0}
      -rpcuser=${BITCOIN_RPC_USER:-rpcuser}
      -rpcpassword=${BITCOIN_RPC_PASSWORD:-rpcpassword}
      -rpcport=${BITCOIN_RPC_PORT:-8333/tcp}
      -server
    volumes:
      - ./data/bitcoin/.bitcoin:/home/bitcoin/.bitcoin

  bitcoin-cash:
    container_name: apc-bitcoin-cash
    image: uphold/bitcoin-abc:0.16.2-alpine
    restart: always
    command:
      -connect=0
      -testnet=${BITCOIN_CASH_TESTNET:-0}
      -rpcallowip=${BITCOIN_CASH_RPC_ALLOWIP:-0.0.0.0/0}
      -rpcuser=${BITCOIN_CASH_RPC_USER:-rpcuser}
      -rpcpassword=${BITCOIN_CASH_RPC_PASSWORD:-rpcpassword}
      -rpcport=${BITCOIN_CASH_RPC_PORT:-8332/tcp}
      -server
    volumes:
      - ./data/bitcoin-cash/.bitcoin:/home/bitcoin/.bitcoin

  pgadmin:
    container_name: apc-wallet-pgadmin
    restart: on-failure
    links:
      - db:wallet-db
    image: fenglc/pgadmin4
    volumes:
       - ./data/pgadmin:/root/.pgadmin
    ports:
      - "8098:5050"
    environment:
      DEFAULT_USER: "${POSTGRES_USER:-postgres}@db"
      DEFAULT_PASSWORD: "${POSTGRES_PASSWORD:-12345}"
